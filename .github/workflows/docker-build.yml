name: Test, Build image with name (v1, v2, v3â€¦)

on:
  push:
    branches: [ "master" ]

# Git tag push karne ke liye zaroori
permissions:
  contents: write

env:
  APP_DIR: .
  DOCKERFILE_PATH: ./Dockerfile
  IMAGE_NAME: docker.io/${{ secrets.DOCKERHUB_USERNAME }}/express-app

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: '${{ env.APP_DIR }}/package-lock.json'

      - name: Install deps
        working-directory: ${{ env.APP_DIR }}
        run: npm ci

      - name: Run tests (skip if no real test script)
        working-directory: ${{ env.APP_DIR }}
        env:
          CI: true
        run: |
          TEST_SCRIPT=$(node -e "const p=require('./package.json'); console.log((p.scripts && p.scripts.test) || '')")
          if [ -z "$TEST_SCRIPT" ] || echo "$TEST_SCRIPT" | grep -qi 'no test specified'; then
            echo "No real test script found. Skipping tests."
            exit 0
          fi
          npm test --silent

  build_and_push:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout (with tags)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0   # tags read karne ke liye

      # Find next version: v1 -> v2 -> v3 ...
      - name: Compute next version tag
        id: ver
        shell: bash
        run: |
          git fetch --tags --force
          LAST=$(git tag -l 'v[0-9]*' --sort=-v:refname | head -n1)
          if [ -z "$LAST" ]; then
            NEXT="v1"
          else
            NUM=${LAST#v}
            if ! [[ "$NUM" =~ ^[0-9]+$ ]]; then
              echo "Last tag '$LAST' not numeric; defaulting to v1"
              NEXT="v1"
            else
              NEXT="v$((NUM+1))"
            fi
          fi
          echo "next=$NEXT" >> "$GITHUB_OUTPUT"
          echo "Next version: $NEXT"

      # (Optional but recommended) Create & push the git tag so history stays in repo
      - name: Create & push git tag
        run: |
          git config user.name  "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag ${{ steps.ver.outputs.next }}
          git push origin ${{ steps.ver.outputs.next }}

      - name: Docker logout (clean) & login
        run: docker logout docker.io || true
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: docker.io
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx (daemon driver)
        uses: docker/setup-buildx-action@v3
        with:
          driver: docker

      - name: Build & push image
        id: bp
        uses: docker/build-push-action@v6
        with:
          context: ${{ env.APP_DIR }}
          file: ${{ env.DOCKERFILE_PATH }}
          platforms: linux/amd64
          push: true
          provenance: false
          sbom: false
          tags: |
            ${{ env.IMAGE_NAME }}:${{ steps.ver.outputs.next }}  # e.g., v3
            ${{ env.IMAGE_NAME }}:${{ github.sha }}               # immutable audit tag
            ${{ env.IMAGE_NAME }}:latest                          # convenience
          labels: |
            org.opencontainers.image.source=${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}

      # (Optional) Print digest for deploy-by-digest
      - name: Show digest
        run: echo "Digest: ${{ steps.bp.outputs.digest }}"

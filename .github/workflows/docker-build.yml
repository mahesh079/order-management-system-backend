name: Test & Build & Push (Docker Hub)

on:
  push:
    branches: [ "master" ]
  # pull_request:
  #   branches: [ "master" ]
  # workflow_dispatch: {}

env:
  APP_DIR: .
  DOCKERFILE_PATH: ./Dockerfile
  # Docker Hub image name: docker.io/<username>/express-app (username lowercase)
  IMAGE_NAME: docker.io/${{ secrets.DOCKERHUB_USERNAME }}/express-app

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: '${{ env.APP_DIR }}/package-lock.json'

      - name: Install deps
        working-directory: ${{ env.APP_DIR }}
        run: npm ci

      - name: Run tests (skip if no real test script)
        working-directory: ${{ env.APP_DIR }}
        env:
          CI: true
        run: |
          TEST_SCRIPT=$(node -e "const p=require('./package.json'); console.log((p.scripts && p.scripts.test) || '')")
          if [ -z "$TEST_SCRIPT" ] || echo "$TEST_SCRIPT" | grep -qi 'no test specified'; then
            echo "No real test script found. Skipping tests."
            exit 0
          fi
          npm test --silent

  build_and_push:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Login to Docker Hub with secrets
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Use Docker daemon driver (simple & reliable)
      - name: Set up Docker Buildx (daemon driver)
        uses: docker/setup-buildx-action@v3
        with:
          driver: docker

      - name: Build & push image (Docker Hub)
        uses: docker/build-push-action@v6
        with:
          context: ${{ env.APP_DIR }}
          file: ${{ env.DOCKERFILE_PATH }}
          platforms: linux/amd64         # single-arch; multi-arch chahiye to arm64 add kar sakte ho
          push: true
          provenance: false              # optional: attestation off
          sbom: false                    # optional: SBOM export off
          tags: |
            ${{ env.IMAGE_NAME }}:${{ github.sha }}
            ${{ env.IMAGE_NAME }}:latest
          labels: |
            org.opencontainers.image.source=${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}
